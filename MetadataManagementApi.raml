#%RAML 0.8
title: saml-md-man-api
version: v0.9.1
baseUri: http://api.dev.ja.net:8100/saml-md-api/{version}


documentation:
- title: Approval API Usage
  content: !include approvalApiUsage.md
- title: TODO
  content: !include todo.md
- title: Authentication
  content: todo

mediaType: application/hal+xml
/entities:
  description: API for handling SAML Entity Descriptors.
  displayName: SAML Metadata Entitites
  /{entityId}:
    description: Represents a single SAML Metadata Entity Descriptor resource. The EntityID URI parameter must be URL encoded.
    displayName: SAML Metadata Entitity
    uriParameters:
      entityId:
        description: The Unique Entity ID of a SAML entity. This *must* be URL encoded.
        displayName: entityId.
        type: string
        required: true
    get:
      description: Returns the SAML Metadata Descriptor relating to the EntityId if it exists. Of note, certain XML Elements are removed before being returned to the caller e.g. XML ID, and certain MDRPI elements. These are added back automatically on add or update.

      responses:
        404:
          description: Entity has not been found in the repository
          body:
            application/hal+xml:
              example: !include entityNotFound-404-error.xml
        200:
          body:
            application/hal+xml:
              example: !include getEntity-200-response.xml
        400:
          description: Bad request. For example, can not decode the URL encoded entityId.
          body:
            application/hal+xml:
              example: !include badRequest-400-urldecode.xml
        500:
          description: Generic server processing error - see error description in Body for details.
          body:
            application/hal+xml:
              example: !include generic500Error.xml

    put:
       description: Updates an existing SAML Entity Descriptor with given {entityId} if it exists.
       headers:
         X_LAST_RETRIEVED_FINGERPRINT:
           type: string
           description: not required. elementFingerPrint is supplied On retrieval of a SAML Entity Descriptor - representing the fingerprint (content hash) of the Entity at that time. If this is supplied as the X_LAST_RETRIEVED_FINGERPRINT, the Entity's current fingerprint will be checked against the input X_LAST_RETRIEVED_FINGERPRINT for similarity. If they are the same, an update will be allowed, if they differ, a ResourceEntityIdDoesNotEqualPayloadEntityIdException is throw to the client - indicating that the entity has been updated by a different client between fetch and update. If the header is not passed, the entity will be updated irrespective of if it was changed during fetch and update.
           displayName: X_LAST_RETRIEVED_FINGERPRINT
           required: false
           example: bd77d5a0e8265f5df66f0623ae728ba3ff5cbf82

         X_MDMAN_PRIORITY:
           type: string
           description: This *must* be set when an update to a SAML Entity Descriptor is requested. It represents an update that should trigger an IMMEDIATE change in the LIVE meatadata repository. Or a change that should be DEFERRED to the normal update schedule of the LIVE metadata repository. DEFERRED should be seen as the 'normal' priority request for updates.
           displayName: X_MDMAN_PRIORITY
           required: true
           enum: ["IMMEDIATE","DEFERRED"]
           example: DEFERRED


       body:
         application/xml:
           example: !include put-entity.xml
       responses:
         200:
           description: SAML Metadata Entity Descriptor for entity {entityId} updated
           headers:
             Location:
               description: The HTTP redirect URI location of the newly updated SAML Entity Descriptor resource.
               displayName: Location
               type: string
         400:
           description: Bad request. For example, can not decode the URL encoded entityId, or the entityId in the payload does not match the request.
           body:
               application/hal+xml:
                   example: !include badRequest-400-urldecode.xml
         404:
            description: Entity has not been found in the repository
            body:
                application/hal+xml:
                    example: !include entityNotFound-404-error.xml
         500:
           description: Generic server processing error - see error description in Body for details.
           body:
             application/hal+xml:
               example: !include generic500Error.xml

    delete:
      description: Deletes a SAML Metadata Descriptor from the repository. Currently, deletes are DEFERRED only. The delete will not occur IMMEDIATLY on the LIVE repository, and will take affect on the LIVE repository's normal update schedule.
      responses:
        200:
          description: SAML Metadata Entity Descriptor for entity {entityId} deleted (DEFERRED).
        500:
            description: Generic server processing error - see error description in Body for details.
            body:
              application/hal+xml:
                example: !include generic500Error.xml
        400:
            description: Bad request. For example, can not decode the URL encoded entityId.
            body:
                application/hal+xml:
                  example: !include badRequest-400-urldecode.xml

        404:
            description: Entity has not been found in the repository
            body:
               application/hal+xml:
                        example: !include entityNotFound-404-error.xml
  /:
    displayName: Collection of SAML Metadata Entities
    description: A Collection of all known SAML Metadata Entity Descriptors. Returned as a list of indivudual items. Of note, certain XML Elements are removed for each Entity before being returned to the caller e.g. XML ID, and certain MDRPI elements. These are added back automatically on add or update.
    get:
      queryParameters:
        filter:
          displayName: filter=ALL
          example: ALL
          required: false
          description: Optional. Can be either ALL or ORGNAMES. By not specifying the parameter, ALL is assumed. ALL retrives all Elements of an EntityDescriptor, ORGNAMES returns only the EntityDescriptor and child Organization Element.
      responses:
        500:
          description: Generic server processing error.
        200:
          description: All Known SAML Metadata entities returned.
          body:
            application/hal+xml:
              example: !include getEntities-200-response.xml

    post:
      description: Adds a new SAML Entity Descriptor fragment to the repository - subject to validation. Any validation errors are returned to the client.
      body:
        application/xml:
          example: !include put-entity.xml
      responses:
          200:
            headers:
              Location:
                description: The HTTP redirect URI location of the newly created SAML Entity Descriptor resource.
                displayName: Location
                type: string
          500:
              description: Generic server processing error - see error description in Body for details.
              body:
                application/hal+xml:
                  example: !include generic500Error.xml
          400:
            description: Bad request, could not convert the input payload to a valid XML document.
            body:
              application/hal+xml:
                example: !include badRequest-400-invalidXMLDocument.xml
          409:
            description: Conflict, entityId already exists, entity descriptor could not be added to the repository.
            body:
              application/hal+xml:
                example: !include conflict-409-add.xml




/members:
                  description: API for handling UK Federation members.
                  displayName: UK Federation Members
                  /{memberId}:
                    description: Represents a single UK Federation Member. The memberId URI parameter must be URL encoded.
                    displayName: UK Federation Member
                    uriParameters:
                      memberId:
                        description: The Unique Member ID of a member. This *must* be URL encoded.
                        displayName: memberId.
                        type: string
                        required: true
                    get:
                      description: Returns the Member fragment relating to the memberId if it exists.
                      responses:
                        404:
                          description: Member has not been found in the repository
                          body:
                            application/hal+xml:
                              example: !include memberNotFound-404-error.xml
                        200:
                          body:
                            application/hal+xml:
                              example: !include getMember-200-response.xml
                        400:
                          description: Bad request. For example, can not decode the URL encoded memberId. Same as entity response.
                          body:
                            application/hal+xml:
                              example: !include badRequest-400-urldecode.xml
                        500:
                          description: Generic server processing error - see error description in Body for details.
                          body:
                            application/hal+xml:
                              example: !include generic500Error.xml

                    put:
                       description: Updates an existing UK Federation member with given {memberId} if it exists. This is a complete replacement, not a patching operation of certain attributes.

                       body:
                         application/xml:
                           example: !include put-member.xml
                       responses:
                         200:
                           description: UK Federation member {memberId} updated
                           headers:
                             Location:
                               description: The HTTP redirect URI location of the updated Member resource.
                               displayName: Location
                               type: string
                         400:
                           description: Bad request. For example, can not decode the URL encoded memberId, or the memberId in the payload does not match the request.
                           body:
                               application/hal+xml:
                                   example: !include badRequest-400-urldecode.xml
                         404:
                            description: Entity has not been found in the repository
                            body:
                                application/hal+xml:
                                    example: !include memberNotFound-404-error.xml
                         500:
                           description: Generic server processing error - see error description in Body for details.
                           body:
                             application/hal+xml:
                               example: !include generic500Error.xml

                    delete:
                      description: Deletes a UK Federation member from the repository immediatly.
                      responses:
                        200:
                          description: UK Federation Member information for {memberId} deleted.
                        500:
                            description: Generic server processing error - see error description in Body for details.
                            body:
                              application/hal+xml:
                                example: !include generic500Error.xml
                        400:
                            description: Bad request. For example, can not decode the URL encoded entityId.
                            body:
                                application/hal+xml:
                                  example: !include badRequest-400-urldecode.xml

                        404:
                            description: Member has not been found in the repository
                            body:
                               application/hal+xml:
                                        example: !include memberNotFound-404-error.xml
                  /:
                    displayName: Collection of UK Federation Members
                    description: A Collection of all known UK Federation Members. Returned as a list of indivudual members.
                    get:
                      responses:
                        500:
                          description: Generic server processing error.
                        200:
                          description: All Known UK Federation members  returned.
                          body:
                            application/hal+xml:
                              example: !include getMembers-200-response.xml

                    post:
                      description: Adds a new UK Federation Member to the repository - subject to validation. Any validation errors are returned to the client.
                      body:
                        application/xml:
                          example: !include put-member.xml
                      responses:
                          200:
                            headers:
                              Location:
                                description: The HTTP redirect URI location of the newly created UK Federation member resource.
                                displayName: Location
                                type: string
                          500:
                              description: Generic server processing error - see error description in Body for details.
                              body:
                                application/hal+xml:
                                  example: !include generic500Error.xml
                          400:
                            description: Bad request, could not convert the input payload to a valid XML document.
                            body:
                              application/hal+xml:
                                example: !include badRequest-400-invalidXMLDocument.xml
                          409:
                            description: Conflict, memberId already exists, entity descriptor could not be added to the repository.
                            body:
                              application/hal+xml:
                                example: !include conflict-409-add.xml

/approvals:
  description: API for handling the correct storage of SAML Entity Descriptors that require approval.
  displayName: SAML Entity Descriptor Approvals
  /{entityId}:
    description: Reference an approval by the entityId of the SAML Entity Descriptor.
    displayName: A SAML Entity Descriptor that needs approval
    uriParameters:
      entityId:
        description: The Unique Entity ID of a SAML entity. This *must* be URL encoded.
        displayName: entityId.
        type: string
        required: true
    get:
       description: Returns the SAML Entity Descriptor relating to the EntityId if it exists in the approvals queue. Also returns a list of validation errors as determine at time of retrieval. If no errors are given, it can be assumed the Entity does not require approval - a subsequent call to delete it from the approvals queue should be made.
       responses:
        404:
          description: Entity has not been found in the repository
          body:
            application/hal+xml:
              example: !include entityNotFound-404-error.xml
        200:
          body:
            application/hal+xml:
              example: !include getEntityApproval-200-response.xml
        400:
          description: Bad request. For example, can not decode the URL encoded entityId.
          body:
            application/hal+xml:
              example: !include badRequest-400-urldecode.xml
        500:
          description: Generic server processing error - see error description in Body for details.
          body:
            application/hal+xml:
              example: !include generic500Error.xml
    delete:
              description: Deletes a SAML Entity Descriptor from the approvals queue.
              responses:
                200:
                  description: SAML Metadata Entity Descriptor for entity {entityId} deleted from approvals queue.
                500:
                    description: Generic server processing error - see error description in Body for details.
                    body:
                      application/hal+xml:
                        example: !include generic500Error.xml
                400:
                    description: Bad request. For example, can not decode the URL encoded entityId.
                    body:
                        application/hal+xml:
                          example: !include badRequest-400-urldecode.xml

                404:
                    description: Entity has not been found in the queue.
                    body:
                       application/hal+xml:
                                example: !include entityNotFound-404-error.xml
  /:
    post:
      description: Adds an SAML Entity Descriptor to the approvals queue. Overwrites any previous Entity Descriptor in the queue with same entityId.
      body:
        application/xml:
          example: !include put-entity.xml
      responses:
             200:
               headers:
                 Location:
                   description: The HTTP redirect URI location of the newly created SAML Entity Descriptor resource in the approvals queue.
                   displayName: Location
                   type: string
             500:
                 description: Generic server processing error - see error description in Body for details.
                 body:
                   application/hal+xml:
                     example: !include generic500Error.xml
             400:
               description: Bad request, could not convert the input payload to a valid XML document.
               body:
                 application/hal+xml:
                   example: !include badRequest-400-invalidXMLDocument.xml
    get:
      description: Returns all SAML Entity Descriptors on the approvals queue. For each Entity, a list of validation errors are given (as determine at time of retrieval). If no errors are given, it can be assumed the Entity does not require approval - a subsequent call to delete it from the approvals queue should be made.
      responses:
                    500:
                      description: Generic server processing error.
                    200:
                      description: All Known SAML Metadata entities on the approval queue returned - along with any validation errors.
                      body:
                        application/hal+xml:
                          example: !include getEntitiesApprovals-200-response.xml
