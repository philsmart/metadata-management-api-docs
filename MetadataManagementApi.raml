#%RAML 0.8
title: saml-md-man-api
version: v0.9.2
baseUri: https://api.dev.ja.net:8100/saml-md-api/{version}


documentation:
- title: Authentication
  content: !include authentication.md
- title: Approval API Usage
  content: !include approvalApiUsage.md
- title: Validation Error Types
  content: !include validation-error-types.md
- title: API Logic
  content: !include api-logic.md
- title: TODO
  content: !include todo.md

mediaType: application/hal+xml
/entities:
  description: API for handling SAML Entity Descriptors.
  displayName: SAML Metadata Entitites
  /{entityId}:
    description: Represents a single SAML Metadata Entity Descriptor resource. The EntityID URI parameter must be URL encoded.
    displayName: SAML Metadata Entitity
    uriParameters:
      entityId:
        description: The Unique Entity ID of a SAML entity. This *must* be URL encoded.
        displayName: entityId.
        type: string
        required: true
    get:
      description: Returns the SAML Metadata Descriptor relating to the EntityId if it exists. Of note, certain XML Elements are removed before being returned to the caller e.g. XML ID, and certain MDRPI elements. These are added back automatically on add or update.

      headers:
        X_ORGID:
          type: string
          description: not required, but assumes a default \* wildcard (ALL) if not supplied. Represents the organisation identifier of the organisation this request is acting on behalf of. The supplied organisation id is matched during authentication to those which the user (HTTP basic authentication) has rights over, if the user does not have rights over that organisation, a HTTP 401 Unathorized response will be given. The user can also request an ALL (\*) wildcard, which will match any entity. The results of the request will be filtered by those which the user has rights over.
          required: false
          example: ukforg44 or *

      responses:

        401:
          description: Unauthorized. The username and password are incorrect or not supplied, or the user does not have rights over the supplied X_ORGID header
        404:
          description: Entity has not been found in the repository
          body:
            application/hal+xml:
              example: !include entityNotFound-404-error.xml
        200:
          body:
            application/hal+xml:
              example: !include getEntity-200-response.xml
        400:
          description: Bad request. For example, can not decode the URL encoded entityId.
          body:
            application/hal+xml:
              example: !include badRequest-400-urldecode.xml
        500:
          description: Generic server processing error - see error description in Body for details.
          body:
            application/hal+xml:
              example: !include generic500Error.xml

    put:
       description: Updates an existing SAML Entity Descriptor with given {entityId} if it exists.
       headers:
         X_PERP:
          type: string
          description: an identifiable string of the perpetrator of the request, for example email address. Used for audit and approvals.
         X_LAST_RETRIEVED_FINGERPRINT:
           type: string
           description: not required. elementFingerPrint is supplied On retrieval of a SAML Entity Descriptor - representing the fingerprint (content hash) of the Entity at that time. If this is supplied as the X_LAST_RETRIEVED_FINGERPRINT, the Entity's current fingerprint will be checked against the input X_LAST_RETRIEVED_FINGERPRINT for similarity. If they are the same, an update will be allowed, if they differ, a ResourceEntityIdDoesNotEqualPayloadEntityIdException is throw to the client - indicating that the entity has been updated by a different client between fetch and update. If the header is not passed, the entity will be updated irrespective of if it was changed during fetch and update.
           displayName: X_LAST_RETRIEVED_FINGERPRINT
           required: false
           example: bd77d5a0e8265f5df66f0623ae728ba3ff5cbf82

         X_MDMAN_PRIORITY:
           type: string
           description: This *must* be set when an update to a SAML Entity Descriptor is requested. It represents an update that should trigger an IMMEDIATE change in the LIVE meatadata repository. Or a change that should be DEFERRED to the normal update schedule of the LIVE metadata repository. DEFERRED should be seen as the 'normal' priority request for updates.
           displayName: X_MDMAN_PRIORITY
           required: true
           enum: ["IMMEDIATE","DEFERRED"]
           example: DEFERRED


       body:
         application/xml:
           example: !include put-entity.xml
       responses:
         422:
           description: Bad request, unprocessable entity. Caused by semantic validation errors in the input.
           body:
              example: !include badRequest-422-validation-error.xml
         401:
           description: Unauthorized. The username and password are incorrect or not supplied, or the user does not have rights over the supplied X_ORGID header
         200:
           description: SAML Metadata Entity Descriptor for entity {entityId} updated
           headers:
             Location:
               description: The HTTP redirect URI location of the newly updated SAML Entity Descriptor resource.
               displayName: Location
               type: string
         400:
           description: Bad request. For example, can not decode the URL encoded entityId, or the entityId in the payload does not match the request.
           body:
               application/hal+xml:
                   example: !include badRequest-400-urldecode.xml
         404:
            description: Entity has not been found in the repository
            body:
                application/hal+xml:
                    example: !include entityNotFound-404-error.xml
         500:
           description: Generic server processing error - see error description in Body for details.
           body:
             application/hal+xml:
               example: !include generic500Error.xml


    delete:
      description: Deletes a SAML Metadata Descriptor from the repository. Currently, deletes are DEFERRED only. The delete will not occur IMMEDIATLY on the LIVE repository, and will take affect on the LIVE repository's normal update schedule.
      headers:
          X_PERP:
           type: string
           description: an identifiable string of the perpetrator of the request, for example email address. Used for audit and approvals.
      responses:
        401:
          description: Unauthorized. The username and password are incorrect or not supplied, or the user does not have rights over the supplied X_ORGID header
        200:
          description: SAML Metadata Entity Descriptor for entity {entityId} deleted (DEFERRED).
        500:
            description: Generic server processing error - see error description in Body for details.
            body:
              application/hal+xml:
                example: !include generic500Error.xml
        400:
            description: Bad request. For example, can not decode the URL encoded entityId.
            body:
                application/hal+xml:
                  example: !include badRequest-400-urldecode.xml
        404:
            description: Entity has not been found in the repository
            body:
               application/hal+xml:
                        example: !include entityNotFound-404-error.xml
  /:
    displayName: Collection of SAML Metadata Entities
    description: A Collection of all known SAML Metadata Entity Descriptors. Returned as a list of indivudual items. Of note, certain XML Elements are removed for each Entity before being returned to the caller e.g. XML ID, and certain MDRPI elements. These are added back automatically on add or update.
    get:
      headers:
        X_ORGID:
          type: string
          description: not required, but assumes a default \* wildcard (ALL) if not supplied. Represents the organisation identifier of the organisation this request is acting on behalf of. The supplied organisation id is matched during authentication to those which the user (HTTP basic authentication) has rights over, if the user does not have rights over that organisation, a HTTP 401 Unathorized response will be given. The user can also request an ALL (\*) wildcard, which will match any entity. The results of the request will be filtered by those which the user has rights over.
          required: false
          example: ukforg44 or *
      queryParameters:
        filter:
          displayName: filter=ALL
          example: ALL
          required: false
          description: Optional. Can be either ALL or ORGNAMES. By not specifying the parameter, ALL is assumed. ALL retrives all Elements of an EntityDescriptor, ORGNAMES returns only the EntityDescriptor and child Organization Element.
      responses:
        401:
          description: Unauthorized. The username and password are incorrect or not supplied, or the user does not have rights over the supplied X_ORGID header
        500:
          description: Generic server processing error.
        200:
          description: All Known SAML Metadata entities returned.
          body:
            application/hal+xml:
              example: !include getEntities-200-response.xml

    post:
      description: Adds a new SAML Entity Descriptor fragment to the repository - subject to validation. Any validation errors are returned to the client.
      headers:
          X_PERP:
           type: string
           description: an identifiable string of the perpetrator of the request, for example email address. Used for audit and approvals.
      body:
        application/xml:
          example: !include put-entity.xml
      responses:
          422:
           description: Bad request, unprocessable entity. Caused by semantic validation errors in the input.
           body:
             example: !include badRequest-422-validation-error.xml
          401:
            description: Unauthorized. The username and password are incorrect or not supplied, or the user does not have rights over the supplied X_ORGID header
          200:
            headers:
              Location:
                description: The HTTP redirect URI location of the newly created SAML Entity Descriptor resource.
                displayName: Location
                type: string
          500:
              description: Generic server processing error - see error description in Body for details.
              body:
                application/hal+xml:
                  example: !include generic500Error.xml
          400:
            description: Bad request, could not convert the input payload to a valid XML document.
            body:
              application/hal+xml:
                example: !include badRequest-400-invalidXMLDocument.xml
          409:
            description: Conflict, entityId already exists, entity descriptor could not be added to the repository.
            body:
              application/hal+xml:
                example: !include conflict-409-add.xml




/members:
                  description: API for handling UK Federation Members or DomainOwners (Organisations).
                  displayName: UK Federation Members and DomainOwners
                  /{orgId}:
                    description: Represents a single UK Federation Member or DomainOwner. The orgId URI parameter must be URL encoded.
                    displayName: UK Federation Member or DomainOwner
                    uriParameters:
                      orgId:
                        description: The Unique ID of a member/DomainOwner. This *must* be URL encoded.
                        displayName: orgId.
                        type: string
                        required: true
                    get:
                      description: Returns the Member/DomainOwner fragment relating to the orgId if it exists.

                      headers:
                       X_ORIGID:
                        type: string
                        description: not required, but assumes a default \* wildcard (ALL) if not supplied. Represents the organisation identifier of the organisation this request is acting on behalf of. The supplied organisation id is matched during authentication to those which the user (HTTP basic authentication) has rights over, if the user does not have rights over that organisation, a HTTP 401 Unathorized response will be given. The user can also request an ALL (\*) wildcard, which will match any entity. The results of the request will be filtered by those which the user has rights over.
                        required: false
                        example: ukforg44 or *

                      responses:
                        401:
                          description: Unauthorized. The username and password are incorrect or not supplied.
                        404:
                          description: Member/DomainOwner has not been found in the repository
                          body:
                            application/hal+xml:
                              example: !include memberNotFound-404-error.xml
                        200:
                          body:
                            application/hal+xml:
                              example: !include getMember-200-response.xml
                        400:
                          description: Bad request. For example, can not decode the URL encoded memberId. Same as entity response.
                          body:
                            application/hal+xml:
                              example: !include badRequest-400-urldecode.xml
                        500:
                          description: Generic server processing error - see error description in Body for details.
                          body:
                            application/hal+xml:
                              example: !include generic500Error.xml

                    put:
                       description: Updates an existing UK Federation Member/DomainOwner with given {orgId} if it exists. This is a complete replacement, not a patching operation of certain attributes.
                       headers:
                         X_PERP:
                          type: string
                          description: an identifiable string of the perpetrator of the request, for example email address. Used for audit and approvals.
                       body:
                         application/xml:
                           example: !include put-member.xml
                       responses:
                         422:
                          description: Bad request, unprocessable entity. Caused by semantic validation errors in the input.
                          body:
                           example: !include badRequest-422-validation-error.xml
                         401:
                           description: Unauthorized. The username and password are incorrect or not supplied.
                         200:
                           description: UK Federation member {memberId} updated
                           headers:
                             Location:
                               description: The HTTP redirect URI location of the updated Member/DomainOwner resource.
                               displayName: Location
                               type: string
                         400:
                           description: Bad request. For example, can not decode the URL encoded memberId, or the memberId in the payload does not match the request.
                           body:
                               application/hal+xml:
                                   example: !include badRequest-400-urldecode.xml
                         404:
                            description: Member/DomainOwner has not been found in the repository
                            body:
                                application/hal+xml:
                                    example: !include memberNotFound-404-error.xml
                         500:
                           description: Generic server processing error - see error description in Body for details.
                           body:
                             application/hal+xml:
                               example: !include generic500Error.xml

                    delete:
                      description: Deletes a UK Federation Member/DomainOwner from the repository immediatly.
                      headers:
                        X_PERP:
                         type: string
                         description: an identifiable string of the perpetrator of the request, for example email address. Used for audit and approvals.
                      responses:
                        401:
                          description: Unauthorized. The username and password are incorrect or not supplied.
                        200:
                          description: UK Federation Member/DomainOwner information for {orgId} deleted.
                        500:
                            description: Generic server processing error - see error description in Body for details.
                            body:
                              application/hal+xml:
                                example: !include generic500Error.xml
                        400:
                            description: Bad request. For example, can not decode the URL encoded entityId.
                            body:
                                application/hal+xml:
                                  example: !include badRequest-400-urldecode.xml

                        404:
                            description: Member has not been found in the repository
                            body:
                               application/hal+xml:
                                        example: !include memberNotFound-404-error.xml
                  /:
                    displayName: Collection of UK Federation Members/DomainOwners
                    description: A Collection of all known UK Federation Members/DomainOwners. Returned as a list of indivudual Members/DomainOwners.
                    get:
                     description: Get all members/domainowners
                     headers:
                        X_ORGID:
                         type: string
                         description: vf
                         required: false
                         example: ukforg44 or *

                     responses:
                        401:
                          description: Unauthorized. The username and password are incorrect or not supplied.
                        500:
                          description: Generic server processing error.
                        200:
                          description: All Known UK Federation Members/DomainOwners returned.
                          body:
                            application/hal+xml:
                              example: !include getMembers-200-response.xml

                    post:
                      description: Adds a new UK Federation Member/DomainOwner to the repository - subject to validation. Any validation errors are returned to the client.
                      headers:
                        X_PERP:
                         type: string
                         description: an identifiable string of the perpetrator of the request, for example email address. Used for audit and approvals.
                      body:
                        application/xml:
                          example: !include put-member.xml
                      responses:
                          422:
                           description: Bad request, unprocessable entity. Caused by semantic validation errors in the input.
                           body:
                            example: !include badRequest-422-validation-error.xml
                          401:
                            description: Unauthorized. The username and password are incorrect or not supplied.
                          200:
                            headers:
                              Location:
                                description: The HTTP redirect URI location of the newly created UK Federation Member/DomainOwner resource.
                                displayName: Location
                                type: string
                          500:
                              description: Generic server processing error - see error description in Body for details.
                              body:
                                application/hal+xml:
                                  example: !include generic500Error.xml
                          400:
                            description: Bad request, could not convert the input payload to a valid XML document.
                            body:
                              application/hal+xml:
                                example: !include badRequest-400-invalidXMLDocument.xml
                          409:
                            description: Conflict, orgId already exists, Member/DomainOwner could not be added to the repository.
                            body:
                              application/hal+xml:
                                example: !include conflict-409-add.xml

/approvals:
  description: API for handling the correct storage of EntityDescriptor/Member/DomainOwners that require approval.
  displayName: SAML EntityDescriptor/Member/DomainOwner Approvals
  /{identifier}:
    description: Reference an approval by its identifier.
    displayName: An EntityDescriptor/Member/DomainOwner that needs approval
    uriParameters:
      identifier:
        description: The Unique ID of a EntityDescriptor/Member/DomainOwner. This *must* be URL encoded.
        displayName: identifier.
        type: string
        required: true
    get:
       description: Returns the EntityDescriptor/Member/DomainOwner relating to the identifier if it exists in the approvals queue. Also returns a list of validation errors as determine at time of retrieval. If no errors are given, it can be assumed the Entity does not require approval - a subsequent call to delete it from the approvals queue should be made.
       responses:
        401:
           description: Unauthorized. The username and password are incorrect or not supplied. The user does not have role ADMIN.
        404:
          description: Entity has not been found in the repository
          body:
            application/hal+xml:
              example: !include entityNotFound-404-error.xml
        200:
          body:
            application/hal+xml:
              example: !include getEntityApproval-200-response.xml
        400:
          description: Bad request. For example, can not decode the URL encoded entityId.
          body:
            application/hal+xml:
              example: !include badRequest-400-urldecode.xml
        500:
          description: Generic server processing error - see error description in Body for details.
          body:
            application/hal+xml:
              example: !include generic500Error.xml
    delete:
              description: Deletes an EntityDescriptor/Member/DomainOwner from the approvals queue.
              responses:
                401:
                   description: Unauthorized. The username and password are incorrect or not supplied. The user does not have role ADMIN.
                200:
                  description: SAML Metadata Entity Descriptor for entity {entityId} deleted from approvals queue.
                500:
                    description: Generic server processing error - see error description in Body for details.
                    body:
                      application/hal+xml:
                        example: !include generic500Error.xml
                400:
                    description: Bad request. For example, can not decode the URL encoded entityId.
                    body:
                        application/hal+xml:
                          example: !include badRequest-400-urldecode.xml

                404:
                    description: Entity has not been found in the queue.
                    body:
                       application/hal+xml:
                                example: !include entityNotFound-404-error.xml
  /:
    post:
      description: Adds an EntityDescriptor/Member/DomainOwner to the approvals queue. Overwrites any previous type in the queue with the same identifier.
      headers:
          X_PERP:
           type: string
           description: an identifiable string of the perpetrator of the request, for example email address. Used for audit and approvals.
      body:
        application/xml:
          example: !include put-entity.xml
      responses:
             401:
               description: Unauthorized. The username and password are incorrect or not supplied. The user does not have role ADMIN.
             200:
               headers:
                 Location:
                   description: The HTTP redirect URI location of the newly created Element resource in the approvals queue.
                   displayName: Location
                   type: string
             500:
                 description: Generic server processing error - see error description in Body for details.
                 body:
                   application/hal+xml:
                     example: !include generic500Error.xml
             400:
               description: Bad request, could not convert the input payload to a valid XML document.
               body:
                 application/hal+xml:
                   example: !include badRequest-400-invalidXMLDocument.xml
    get:
      description: Returns all EntityDescriptors/Members/DomainOwner on the approvals queue. For each type, a list of validation errors are given (as determine at time of retrieval). If no errors are given, it can be assumed the type does not require approval - a subsequent call to delete it from the approvals queue should be made.
      responses:
                    401:
                      description: Unauthorized. The username and password are incorrect or not supplied. The user does not have role ADMIN.
                    500:
                      description: Generic server processing error.
                    200:
                      description: All Known SAML Metadata entities on the approval queue returned - along with any validation errors.
                      body:
                        application/hal+xml:
                          example: !include getEntitiesApprovals-200-response.xml
